import { ButtonForm, CheckboxAgree, InputPassword, InputUser } from '.'

describe('Mediator Problem', () => {
  it('should be throw error if form is not valid', () => {
    const inputUser = new InputUser()
    const inputPassword = new InputPassword()
    const checkbox = new CheckboxAgree()
    const button = new ButtonForm(inputUser, inputPassword, checkbox)
    inputUser.setButton(button)
    inputPassword.setButton(button)
    checkbox.setButton(button)
    expect(() => button.click()).toThrowError('Form is not valid')
  })
  it('should be throw error if form is not valid and sets wrongs input', () => {
    const inputUser = new InputUser()
    const inputPassword = new InputPassword()
    const checkbox = new CheckboxAgree()
    const button = new ButtonForm(inputUser, inputPassword, checkbox)
    inputUser.setButton(button)
    inputPassword.setButton(button)
    checkbox.setButton(button)
    expect(() => button.click()).toThrowError('Form is not valid')
    expect(inputUser.isWrong()).toBe(true)
    expect(inputPassword.isWrong()).toBe(true)
  })
  it('should be find user if form is valid', () => {
    const inputUser = new InputUser()
    const inputPassword = new InputPassword()
    const checkbox = new CheckboxAgree()
    const button = new ButtonForm(inputUser, inputPassword, checkbox)
    inputUser.setButton(button)
    inputPassword.setButton(button)
    checkbox.setButton(button)
    inputUser.setValue('user1')
    inputPassword.setValue('password1')
    checkbox.check()
    expect(button.isDisable()).toBe(false)
    expect(button.click()).toEqual({ username: 'user1', password: 'password1' })
  })
})
